/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ctsesamgui;

import static ctsesamgui.CtSESAM.PBKDF2_HMAC_sha512;
import static ctsesamgui.CtSESAM.getPassword;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.io.UnsupportedEncodingException;
import java.awt.Color;
import javax.swing.UIManager;

/**
 *
 * @author Vkyr
 */
public class CtSesamGui extends javax.swing.JFrame {

    /**
     * Creates new form CtSesamGui
     */
    public CtSesamGui() {
        super("c't Sesam Gui");
        initComponents();
        defaultInitSettings();
    }
    
    /**
     * Initialize settings
     */    
    private void defaultInitSettings() {
        // Set the default password length
        lengthSpinner.setValue(10);
        // Center the jframe on screen
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        versionLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        domainLabel = new javax.swing.JLabel();
        domainTextField = new javax.swing.JTextField();
        masterLabel = new javax.swing.JLabel();
        masterPasswordField = new javax.swing.JPasswordField();
        lettersCheckBox = new javax.swing.JCheckBox();
        numbersCheckBox = new javax.swing.JCheckBox();
        charsCheckBox = new javax.swing.JCheckBox();
        lengthSpinner = new javax.swing.JSpinner();
        masterToggleButton = new javax.swing.JToggleButton();
        generateButton = new javax.swing.JButton();
        passwdLabel = new javax.swing.JLabel();
        passwdTextField = new javax.swing.JTextField();
        clipButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        clearButton = new javax.swing.JButton();
        settingsLabel = new javax.swing.JLabel();
        lengthLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        titleLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("ctsesamgui/bundle"); // NOI18N
        titleLabel.setText(bundle.getString("C'T SESAM GUI")); // NOI18N

        versionLabel.setText(bundle.getString("V.1.0")); // NOI18N

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ctsesamgui/password.png"))); // NOI18N

        domainLabel.setText(bundle.getString("DOMAIN:")); // NOI18N

        domainTextField.setToolTipText(bundle.getString("INSERT DOMAIN NAME HERE")); // NOI18N

        masterLabel.setText(bundle.getString("MASTERPWD:")); // NOI18N

        masterPasswordField.setToolTipText(bundle.getString("INSERT YOUR MASTERPASSWORD")); // NOI18N

        lettersCheckBox.setSelected(true);
        lettersCheckBox.setText(bundle.getString("USE LETTERS")); // NOI18N

        numbersCheckBox.setSelected(true);
        numbersCheckBox.setText(bundle.getString("USE NUMBERS")); // NOI18N

        charsCheckBox.setSelected(true);
        charsCheckBox.setText(bundle.getString("USE CHARACTERS")); // NOI18N

        lengthSpinner.setToolTipText(bundle.getString("SELECT THE DESIRED PASSWORD LENGTH")); // NOI18N

        masterToggleButton.setText(bundle.getString("...")); // NOI18N
        masterToggleButton.setToolTipText(bundle.getString("SHOW / HIDE MASTERPASSWORT")); // NOI18N
        masterToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masterToggleButtonActionPerformed(evt);
            }
        });

        generateButton.setText(bundle.getString("GENERATE PASSWORD")); // NOI18N
        generateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateButtonActionPerformed(evt);
            }
        });

        passwdLabel.setText(bundle.getString("PASSWORD:")); // NOI18N

        passwdTextField.setBackground(new java.awt.Color(0, 0, 0));
        passwdTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        passwdTextField.setForeground(new java.awt.Color(255, 255, 255));
        passwdTextField.setToolTipText(bundle.getString("THE GENERATED PASSWORD")); // NOI18N

        clipButton.setText(bundle.getString("COPY TO CLIPBOARD")); // NOI18N
        clipButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clipButtonActionPerformed(evt);
            }
        });

        clearButton.setText(bundle.getString("CLEAR ALL")); // NOI18N
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        settingsLabel.setText(bundle.getString("USE:")); // NOI18N

        lengthLabel.setText(bundle.getString("LENGTH")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jSeparator2))
            .addComponent(jSeparator3)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(versionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addComponent(generateButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(domainLabel)
                                    .addComponent(masterLabel)
                                    .addComponent(passwdLabel))
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(domainTextField)
                                            .addComponent(masterPasswordField, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(masterToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(clearButton)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(clipButton, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(passwdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(settingsLabel)
                                .addGap(18, 18, 18)
                                .addComponent(lettersCheckBox)
                                .addGap(10, 10, 10)
                                .addComponent(numbersCheckBox)
                                .addGap(10, 10, 10)
                                .addComponent(charsCheckBox)
                                .addGap(18, 18, 18)
                                .addComponent(lengthSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lengthLabel)))))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(titleLabel)
                            .addComponent(versionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(domainLabel)
                    .addComponent(domainTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(masterLabel)
                    .addComponent(masterPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(masterToggleButton))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(numbersCheckBox)
                    .addComponent(settingsLabel)
                    .addComponent(charsCheckBox)
                    .addComponent(lengthLabel)
                    .addComponent(lengthSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lettersCheckBox))
                .addGap(18, 18, 18)
                .addComponent(generateButton)
                .addGap(18, 18, 18)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(passwdLabel)
                    .addComponent(passwdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(clearButton)
                    .addComponent(clipButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void masterToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masterToggleButtonActionPerformed
        if(masterToggleButton.isSelected()){
            masterPasswordField.setEchoChar((char) 0);
        } else {
            masterPasswordField.setEchoChar('*');
        }
    }//GEN-LAST:event_masterToggleButtonActionPerformed

    private void generateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateButtonActionPerformed
        if ((!"".equals(domainTextField.getText())) && (masterPasswordField.getPassword().length > 1)) {
            String domain = domainTextField.getText();
            char[] pass = masterPasswordField.getPassword();
            String masterPassword = new String(pass);
            boolean useLetters = lettersCheckBox.isSelected();
            boolean useNumbers = numbersCheckBox.isSelected();
            boolean useChars = charsCheckBox.isSelected();
            int pwdlength = (int)lengthSpinner.getValue();
            
            try {
                byte[] hashString = (domain + masterPassword).getBytes("UTF-8");
                byte[] salt = ("pepper").getBytes("UTF-8");
                byte[] digest = PBKDF2_HMAC_sha512(hashString, salt, 4096);
                passwdTextField.setText(getPassword(digest, useChars, useLetters, useNumbers, pwdlength));
            } catch (UnsupportedEncodingException e) {
                e.printStackTrace();
            }
        
        }
    }//GEN-LAST:event_generateButtonActionPerformed

    private void clipButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clipButtonActionPerformed
        if (passwdTextField.getText().length() > 1) {
            StringSelection selection = new StringSelection(passwdTextField.getText());
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(selection, selection);
        }
    }//GEN-LAST:event_clipButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        domainTextField.setText("");
        masterPasswordField.setText("");
        passwdTextField.setText("");
    }//GEN-LAST:event_clearButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
       
         /* Set the Nimbus look and feel */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
             * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
             */
            try {
                // Nimbus UI L&F skinning
                UIManager.put( "control", new Color( 0, 0, 0) );
                UIManager.put( "info", new Color(128,128,128) );
                UIManager.put( "nimbusBase", new Color( 18, 30, 49) );
                UIManager.put( "nimbusAlertYellow", new Color( 248, 187, 0) );
                UIManager.put( "nimbusDisabledText", new Color( 128, 128, 128) );
                UIManager.put( "nimbusFocus", new Color(115,164,209) );
                UIManager.put( "nimbusGreen", new Color(176,179,50) );
                UIManager.put( "nimbusInfoBlue", new Color( 66, 139, 221) );
                UIManager.put( "nimbusLightBackground", new Color( 18, 30, 49) );
                UIManager.put( "nimbusOrange", new Color(191,98,4) );
                UIManager.put( "nimbusRed", new Color(169,46,34) );
                UIManager.put( "nimbusSelectedText", new Color( 255, 255, 255) );
                UIManager.put( "nimbusSelectionBackground", new Color( 104, 93, 156) );
                UIManager.put( "text", new Color( 230, 230, 230) );
                
                // Check for Nimbus L&F and use it if available, otherwise default L&F is used
                for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                    if ("Nimbus".equals(info.getName())) {
                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                        break;
                    }
                }
            } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
                java.util.logging.Logger.getLogger(CtSesamGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
        //</editor-fold>
        
       

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new CtSesamGui().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox charsCheckBox;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton clipButton;
    private javax.swing.JLabel domainLabel;
    private javax.swing.JTextField domainTextField;
    private javax.swing.JButton generateButton;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel lengthLabel;
    private javax.swing.JSpinner lengthSpinner;
    private javax.swing.JCheckBox lettersCheckBox;
    private javax.swing.JLabel masterLabel;
    private javax.swing.JPasswordField masterPasswordField;
    private javax.swing.JToggleButton masterToggleButton;
    private javax.swing.JCheckBox numbersCheckBox;
    private javax.swing.JLabel passwdLabel;
    private javax.swing.JTextField passwdTextField;
    private javax.swing.JLabel settingsLabel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel versionLabel;
    // End of variables declaration//GEN-END:variables
}
